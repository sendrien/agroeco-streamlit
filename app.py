import streamlit as st
import pandas as pd

# â”€â”€â”€ Configuration de la page â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
st.set_page_config(
    page_title="Dashboard AGROECO (Static)",
    page_icon="ðŸŒ±",
    layout="wide",
    initial_sidebar_state="expanded",
)

# â”€â”€â”€ Styles CSS personnalisÃ©s â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
st.markdown(
    """
    <style>
      /* Titre principal */
      h1 {
        color: #2E8B57;
        font-size: 2.5rem;
      }
      /* Sous-titres */
      h2, h3 {
        color: #556B2F;
      }
      /* Sidebar background */
      .css-1d391kg .css-1lcbmhc {
        background-color: #F0FFF0;
      }
      /* Police des tableaux */
      .stDataFrame div {
        font-family: 'Arial', sans-serif;
      }
    </style>
    """,
    unsafe_allow_html=True,
)

# â”€â”€â”€ Titre et description â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
st.title("ðŸŒ± Dashboard AGROECO (DonnÃ©es statiques)")
st.markdown("**Visualisation des scores par indicateur et par dimension (exemple statique)**")

# â”€â”€â”€ DonnÃ©es statiques d'exemple â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
data = {
    "Dimension": [
        "Environnement", "Environnement",
        "Ã‰conomique", "Ã‰conomique",
        "Politico-social"
    ],
    "Indicateur": [
        "QualitÃ© de lâ€™eau", "BiodiversitÃ©",
        "ViabilitÃ© financiÃ¨re", "Chiffre dâ€™affaires",
        "Participation citoyenne"
    ],
    "Producteurs": [5.2, 4.7, 4.8, 5.0, 4.5],
    "Consommateurs": [4.8, 4.3, 4.2, 4.5, 4.0],
    "ONG":           [5.5, 4.9, 4.9, 4.8, 4.6],
    "OSC":           [5.0, 4.2, 4.4, 4.6, 4.1],
    "AutoritÃ©s":     [4.6, 4.1, 4.1, 4.2, 3.9],
    "Recherche":     [5.1, 4.8, 4.7, 4.9, 4.4],
    "QualitÃ©":       [4.9, 4.0, 4.0, 4.3, 3.8],
}

df_ind = pd.DataFrame(data)

# Calcul de la synthÃ¨se par dimension (moyenne non pondÃ©rÃ©e)
df_dim = (
    df_ind
    .groupby("Dimension", as_index=True)
    .mean()
    .round(2)
)

# â”€â”€â”€ Sidebar : choix de la vue â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
view = st.sidebar.radio(
    "SÃ©lectionnez la vue",
    ("DÃ©tails par indicateur", "SynthÃ¨se par dimension")
)

if view == "DÃ©tails par indicateur":
    st.header("ðŸ“Š DÃ©tails par indicateur")
    # Filtre par dimension
    dim = st.sidebar.selectbox("Choisir une dimension", df_ind["Dimension"].unique())
    subset = df_ind[df_ind["Dimension"] == dim].drop(columns="Dimension")
    # Affichage colorisÃ©
    st.dataframe(
        subset.style
              .background_gradient(axis=1, cmap="RdYlGn")
              .format("{:.2f}"),
        use_container_width=True,
    )

else:
    st.header("ðŸ“ˆ SynthÃ¨se par dimension")
    # SÃ©lection des catÃ©gories Ã  afficher
    cats = st.sidebar.multiselect(
        "Choisir des catÃ©gories",
        df_dim.columns.tolist(),
        default=df_dim.columns.tolist()
    )
    sub = df_dim[cats]
    st.dataframe(
        sub.style
           .background_gradient(axis=1, cmap="RdYlGn")
           .format("{:.2f}"),
        use_container_width=True,
    )

# â”€â”€â”€ Pied de page â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
st.markdown("---")
st.markdown("*Exemple statique â€” aucune donnÃ©e externe chargÃ©e*")
